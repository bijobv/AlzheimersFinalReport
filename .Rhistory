# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 7,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 4,  # Symbol for non-significant
colors = c("#6D9EC1", "white", "#E46726"))
library(psych)
library(ggcorrplot)
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 4,  # Symbol for non-significant
colors = c("#6D9EC1", "white", "#E46726"))
library(psych)
library(ggcorrplot)
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "px",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#6D9EC1", "white", "#E46726"))
library(psych)
library(ggcorrplot)
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "pch",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#6D9EC1", "white", "#E46726"))
library(psych)
library(ggcorrplot)
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#6D9EC1", "white", "#E46726"))
library(psych)
library(ggcorrplot)
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#E09F3E", "#335C67", "#99A88C"))
library(psych)
library(ggcorrplot)
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#E09F3E", "#E3DED1", "#99A88C"))
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#E09F3E", "#E3DED1", "#99A88C"))
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#E09F3E", "#E3DED1", "#99A88C"))
library(lattice)
diagnosis_counts <- table(alzdata$Diagnosis)
diagnosis_proportions <- prop.table(diagnosis_counts)
par(mai = c(1, 1, 0.5, 0.2))
imbalance_barplot <- barplot(diagnosis_proportions * 100,
col = c("#E09F3E", "#335C67"),
ylab = "Percentage",
ylim = c(0, 100),
border = NA,
cex.names = 1,
cex.axis = 1,
cex.lab = 1,
width = 0.5,
space = 0.1,
names.arg = c("No Alzheimers", "Alzheimer's")
)
text(imbalance_barplot, diagnosis_proportions * 100 + 4,
labels = paste0(round(diagnosis_proportions * 100, 1), "%"),
cex = 0.8, col = "black")
abline(h = 0, col = "black", lwd = 1)
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# violin plots for numeric variables by target_var
ggviolin <- ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
print(ggviolin)
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# violin plots for numeric variables by target_var
ggviolin <- ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
print(ggviolin)
violin_plotly <- ggplotlyr(ggviolin)
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman"); library(pacman)
pacman::p_load(tidyverse, caret, ranger, tree, glmnet, ISLR, ggplot2, Matrix, dplyr, knitr, kableExtra, MASS, RColorBrewer, caTools, MLmetrics, lattice, psych, ggcorrplot)
# read the cleaned Alzheimers dataset
alzdata <- readRDS("knnalzdata.RDS")
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#E09F3E", "#E3DED1", "#99A88C"))
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# violin plots for numeric variables by target_var
ggviolin <- ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
print(ggviolin)
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# violin plots for numeric variables by target_var
ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
View(numeric_vars_long)
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman"); library(pacman)
pacman::p_load(tidyverse, caret, ranger, tree, glmnet, ISLR, ggplot2, Matrix, dplyr, knitr, kableExtra, MASS, RColorBrewer, caTools, MLmetrics, lattice, psych, ggcorrplot)
# read the cleaned Alzheimers dataset
alzdata <- readRDS("knnalzdata.RDS")
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#E09F3E", "#E3DED1", "#99A88C"))
# Calculate correlation matrix and p-value matrix
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
numeric_cor_matrix <- cor_results$r
numeric_p_matrix <- cor_results$p
# Plot with ggcorrplot
ggcorrplot(numeric_cor_matrix,
method = "square",
type = "lower",
lab = TRUE,  # Show correlation values
lab_size = 0,
tl.cex = 6,  # Text label size
tl.col = "black",
p.mat = numeric_p_matrix,
sig.level = 0.05,  # Significance level for p-values
insig = "blank",  # Mark non-significant correlations
pch = 1,  # Symbol for non-significant
colors = c("#E09F3E", "#E3DED1", "#99A88C"))
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# violin plots for numeric variables by target_var
ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# violin plots for numeric variables by target_var
ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
View(numeric_vars_long)
ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
# load or install required packages using pacman
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
pacman::p_load(tidyverse, reshape2, knitr, RColorBrewer, psych, caret, class, randomForest, ranger, corrplot, data.table, DescTools, ggcorrplot, kable, insight, latticeExtra, lmtest, glmnet, psychTools, purrr, rmarkdown, styler, tidygraph, tidymodels, modelenv, parsnip, vcd, xgboost, lattice, plotly, GGally, cowplot, Hmisc, correlation, PRROC, MLMetrics, heatmaply)
fulldata <- read.csv("alzheimers_disease_data.csv")
fulldata$Diagnosis <- factor(fulldata$Diagnosis, levels = c(0, 1), labels = c("No", "Yes"))
fulldata <- subset(fulldata, select = -c(PatientID, DoctorInCharge))
# load or install required packages using pacman
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
pacman::p_load(tidyverse, reshape2, knitr, RColorBrewer, psych, caret, class, randomForest, ranger, corrplot, data.table, DescTools, ggcorrplot, kable, insight, latticeExtra, lmtest, glmnet, psychTools, purrr, rmarkdown, styler, tidygraph, tidymodels, modelenv, parsnip, vcd, xgboost, lattice, plotly, GGally, cowplot, Hmisc, correlation, PRROC, MLMetrics, heatmaply)
alzdata <- readRDS("alzdata.RDS")
# create values by variable type
# target variable
target_var <- "Diagnosis"
# numeric/continuous variables
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
# binary variables (factor with 2 levels)
binary_vars <- names(alzdata)[sapply(alzdata, function(x) is.factor(x) && length(levels(x)) == 2)]
binary_vars <- setdiff(binary_vars, target_var)
# multi categorical variables (> 2 levels)
multicat_vars <- names(alzdata)[sapply(alzdata, function(x) is.factor(x) && length(levels(x)) > 2)]
# all categorical vars (excluding target_var)
all_catvars <- c(binary_vars, multicat_vars)
# all predictor variables (excluding target_var)
predictor_vars <- setdiff(names(alzdata), target_var)
# function to subset data on variable groupings
subset_data <- function(data, vars) {
return(data[, vars])
}
numeric_data <- subset_data(alzdata, numeric_vars)
binary_data <- subset_data(alzdata, binary_vars)
multicat_data <- subset_data(alzdata, multicat_vars)
# Load required libraries
library(readr)   # To read CSV files
library(knitr)   # To format tables in a nice layout
library(kableExtra)
# Read the CSV file into a dataframe
data <- read_csv("dataset_description.csv", show_col_types = FALSE)
kable(data, format = "html") %>%
kable_styling() %>%
column_spec(1:ncol(data), extra_css = "font-size: 11px;") %>%  # Font size for table body
row_spec(0, extra_css = "font-size: 11px;")  # Font size for headers (row 0)
library(lattice)
diagnosis_counts <- table(alzdata$Diagnosis)
diagnosis_proportions <- prop.table(diagnosis_counts)
par(mai = c(1, 1, 0.5, 0.2))
imbalance_barplot <- barplot(diagnosis_proportions * 100,
col = RColorBrewer::brewer.pal(3, "Set2"),
ylab = "Percentage",
ylim = c(0, 100),
border = NA,
cex.names = 1,
cex.axis = 1,
cex.lab = 1,
width = 0.5,
space = 0.1,
names.arg = c("No Alzheimers", "Alzheimer's")
)
abline(h = 0, col = "black", lwd = 1)
library(psych)
library(corrplot)
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
cor_results <- corr.test(alzdata[, numeric_vars], method = "pearson")
# cor matrix
numeric_cor_matrix <- cor_results$r
# p value matrix
numeric_p_matrix <- cor_results$p
# print(dim(numeric_cor_matrix))
# print(dim(numeric_p_matrix))
par(mai = c(1, 1, 0, 1))
# heatmap
corrheatmap <- corrplot(numeric_cor_matrix,
method = "color",
type = "lower",
tl.cex = 0.7,
tl.col = "black",
cl.cex = 0.7,
mar = c(0, 1, 2, 3),
p.mat = numeric_p_matrix,
sig.level = 0.05,
insig = "label_sig",
pch = 8,
pch.cex = 1
)
library(ggplot2)
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# violin plots for numeric variables by target_var
ggviolin <- ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
print(ggviolin)
# create plotly from ggplot object
violin_plotly <- ggplotlyr(ggviolin)
library(ggplot2)
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# violin plots for numeric variables by target_var
ggviolin <- ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
print(ggviolin)
# create plotly from ggplot object
#violin_plotly <- ggplotlyr(ggviolin)
View(numeric_vars_long)
# load or install required packages using pacman
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
pacman::p_load(tidyverse, reshape2, knitr, RColorBrewer, psych, caret, class, randomForest, ranger, corrplot, data.table, DescTools, ggcorrplot, kable, insight, latticeExtra, lmtest, glmnet, psychTools, purrr, rmarkdown, styler, tidygraph, tidymodels, modelenv, parsnip, vcd, xgboost, lattice, plotly, GGally, cowplot, Hmisc, correlation, PRROC, MLMetrics, heatmaply)
alzdata <- readRDS("alzdata.RDS")
numeric_vars <- names(alzdata)[sapply(alzdata, is.numeric)]
library(ggplot2)
# long format
numeric_vars_long <- reshape2::melt(alzdata, id.vars = "Diagnosis", measure.vars = numeric_vars)
# violin plots for numeric variables by target_var
ggviolin <- ggplot(numeric_vars_long, aes(x = Diagnosis, y = value, fill = Diagnosis)) +
geom_violin(trim = FALSE) +
facet_wrap(~variable, scales = "free", nrow = 2) +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(
plot.title = element_text(hjust = 0, size = 8),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
)
print(ggviolin)
# create plotly from ggplot object
#violin_plotly <- ggplotlyr(ggviolin)
